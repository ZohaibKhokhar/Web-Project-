@model List<CartItem>
@{
    Layout = "Layout2";
}

<div class="text-center" style="margin-top:80px;">
    <p class="welcome">Shopping Cart</p>
</div>

<div class="cart-container my-5">
    <div class="row">
        @for (int i = 0; i < Model.Count; i += 3)
        {
            <div class="row">
                @for (int j = 0; j < 3 && i + j < Model.Count; j++)
                {
                    <div class="col-lg-4 col-md-6">
                        <div class="card horizontal" style="width: 100%; margin-bottom: 20px; margin-top: 30px; display: flex; flex-direction: row; align-items: center; padding: 1rem;">
                            <div class="card-image" style="width: 30%; float: left; padding: 1rem;">
                                <img src="@Model[i + j].Product?.ImageUrl" class="card-img-top" alt="..." style="width: 190%; height: 170px; object-fit: cover;">
                            </div>
                            <div class="card-body" style="width: 70%; float: left; padding: 1rem;">
                                <h5 class="card-title" style="font-weight: bold; margin-bottom: 0.5rem;margin-left:95px;">@Model[i + j].Product.PName</h5>
                                <p class="card-text" style="font-size: 1rem; margin-bottom: 0.2rem;margin-left:95px;">Quantity: @Model[i + j].Quantity</p>
                                <p class="card-text" style="font-size: 1rem; margin-bottom: 0.2rem;margin-left:95px;">Price: @Model[i + j].Product.DiscountedPrice</p>
                                <p class="card-text" style="font-size: 1rem; margin-bottom: 0.2rem;margin-left:95px;">Total: @(Model[i + j].Quantity * Model[i + j].Product.DiscountedPrice)</p>
                                <button class="btn btn-danger btn-sm remove-from-cart" data-product-id="@Model[i + j].ProductId">Remove</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<div class="sum-container">
    <div class="container">
        <row>
            <div class="text-center"><h4>Total: @Model.Sum(item => item.Quantity * item.Product.DiscountedPrice)/-</h4></div>
            @if (Model.Count > 0)
            {
                <div class="text-center">
                    <a class="btn btn-success checkout-btn" href="/Order/PlaceOrder">Check out</a>
                </div>
            }
            else
            {
                <div class="text-center">
                    <a class="btn btn-success checkout-btn disabled" href="#">Check out</a>
                </div>
            }
        </row>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    $(document).ready(function () {

        // Function to update the cart count
        function updateCartCount(count) {
            $('#cart-count').text(count); // Update the cart count on the page
            if (count > 0) {
                $('#empty-cart-message').hide();
            } else {
                $('#empty-cart-message').show();
            }
        }

        // Function to update the total amount
        function updateTotalAmount() {
            let totalAmount = 0;
            $('.card').each(function () {
                //taking data from the card elements
                const quantityText = $(this).find('.card-text').eq(0).text();
                const priceText = $(this).find('.card-text').eq(1).text();

                //parsing that data
                const quantity = parseFloat(quantityText.replace(/Quantity: /, '').replace(/[^0-9.]/g, ''));
                const price = parseFloat(priceText.replace(/Price: /, '').replace(/[^0-9.]/g, ''));

                //now calculating the total amount based on it
                totalAmount += quantity * price;
            });

            $('.sum-container .text-center h4').text('Total: ' + totalAmount.toFixed(2) + '/-');
        }

        // Handle remove from cart button click
        $('.remove-from-cart').click(function (e) {
            e.preventDefault(); // Prevent default form submission
            var productId = $(this).data('product-id');
            var button = $(this); // Store the button for potential future use

            $.ajax({
                type: "POST",
                url: '@Url.Action("RemoveFromCart", "Order")',
                data: { productId: productId },
                success: function (response) {
                    if (response.success) {
                        // Remove item from the DOM
                        button.closest('.card').remove();

                        // Update cart count
                        updateCartCount(response.count);

                        // Update total amount
                        updateTotalAmount();
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + xhr.responseText);
                }
            });
        });

        // Initial call to set total amount on page load
        updateTotalAmount();
    });
</script>


